<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Dominik Schacht</title><link>http://www.dominik-schacht.com/blog</link><description>The personal blog of Dominik Schacht.</description><lastBuildDate>Sun, 28 Apr 2013 17:20:50 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Quidditas 0.9 released</title><link>http://www.dominik-schacht.com/blog/blog/quidditas-released.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I finally managed to convince myself to publish one of my projects to the python package index. Quidditas is in a usable state - most of the work I've done on it in the past weeks was working on example projects to see if quidditas itself still has immediate problems but since I found none I can show the project to others so they can find the problems I just don't see.&lt;/p&gt;
&lt;p&gt;The project can be visited at &lt;a class="reference external" href="http://quidditas.googlecode.com"&gt;http://quidditas.googlecode.com&lt;/a&gt; and downloaded via pypi. Use:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install quidditas
&lt;/pre&gt;
&lt;p&gt;to install the current version 0.9. Help can be found at the project page. Additional help into the ideas of entity based game development will be available in future blog posts.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://www.dominik-schacht.com/blog/blog/quidditas-released.html</guid><pubDate>Sun, 28 Apr 2013 17:04:39 GMT</pubDate></item><item><title>Moving to Nikola, part 2</title><link>http://www.dominik-schacht.com/blog/blog/moving-to-nikola-part-2.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;One of the biggest issues moving all of the site to Nikola was how to integrate the former main page - the about-me page into the Nikola system. At first I thought it would be relatively easy since both systems use twitter bootstrap as their css foundation, it should be possible to translate most of the html into RestructuredText and have it look very similar. But as it turned out I could never muster up the motivation to do so and that this was for the better.&lt;/p&gt;
&lt;div class="section" id="adding-html-pages"&gt;
&lt;h2&gt;Adding html pages&lt;/h2&gt;
&lt;p&gt;After some thinking about the problem and reading the change log for Nikola 5.2 it finally dawned upon me that I could just drop the html page into Nikola as a html-story and be finished with it. A first try to create a new story with html formatting failed with the message:&lt;/p&gt;
&lt;blockquote&gt;
Exception: Can't find a way, using your configuration, to createa page in format html. You may want to tweak post_compilers or post_pages in conf.py&lt;/blockquote&gt;
&lt;p&gt;I am thankful to the author of Nikola, Roberto Alsina, for writing helpful error messages. Fixing my config resolved this problem and I could successfully create a htlm-story.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;post_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pages/*.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"empty.tmpl"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see in the config line I also added a new template for html stories. The &lt;tt class="docutils literal"&gt;story.tmpl&lt;/tt&gt; template includes the story title before the content and I do no want that when writing a story using html. The &lt;tt class="docutils literal"&gt;empty.tmpl&lt;/tt&gt; looks like this:&lt;/p&gt;
&lt;pre class="code mako literal-block"&gt;
&lt;span class="x"&gt;# -*- coding: utf-8 -*-
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="nb"&gt;inherit&lt;/span&gt; &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="cp"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="cp"&gt;&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
    &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;/%&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="cp"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;And the result is that I can just paste everything in the &lt;cite&gt;&amp;lt;body&amp;gt;&lt;/cite&gt;-tag from the current main page into the created html-story and looks just like the original.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-the-homepage"&gt;
&lt;h2&gt;Setting the homepage&lt;/h2&gt;
&lt;p&gt;When a Nikola site is opened the homepage is set to be the index of blog posts. For this site I want the homepage to be the newly created html story page. The first step to do so is to tell Nikola to place the generated file in to the root of the output so it can be read as an index, this is done by the &lt;tt class="docutils literal"&gt;post_pages&lt;/tt&gt; configuration as seen above. That line specifies that &lt;tt class="docutils literal"&gt;*.html&lt;/tt&gt; files found in the &lt;tt class="docutils literal"&gt;pages&lt;/tt&gt; directory are to be placed in &lt;tt class="docutils literal"&gt;""&lt;/tt&gt; - the root. The file &lt;tt class="docutils literal"&gt;pages/index.html&lt;/tt&gt; will then be placed in &lt;tt class="docutils literal"&gt;output/index.html&lt;/tt&gt; and is the top level file.&lt;/p&gt;
&lt;p&gt;But for this to work I need to move the old index file, the blog index, or the page building will fail with an error message:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ERROR: Two different tasks can't have a common target.'output/index.html' is a target for render_pages:output/index.html and render_indexes:output/index.html.
&lt;/pre&gt;
&lt;p&gt;Fortunately the target for the blog index can be changed easily in the configuration file.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;INDEX_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"posts"&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Tells Nikola to place the blog index into the &lt;tt class="docutils literal"&gt;posts&lt;/tt&gt; directory. As a result I can find my new index directly under &lt;tt class="docutils literal"&gt;localhost:8000/&lt;/tt&gt; and the blog index under &lt;tt class="docutils literal"&gt;localhost:8000/posts&lt;/tt&gt; and all is well.&lt;/p&gt;
&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://www.dominik-schacht.com/blog/blog/moving-to-nikola-part-2.html</guid><pubDate>Fri, 15 Feb 2013 16:23:32 GMT</pubDate></item><item><title>Working on the design</title><link>http://www.dominik-schacht.com/blog/blog/working-on-the-design.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Instead of producing content I am still focused on working on the blog's template to make it look more in line with the main page and less like the standard Nikola blog. Fortunately both use &lt;a class="reference external" href="http://twitter.github.com/bootstrap/"&gt;Twitter Bootstrap&lt;/a&gt; as their css fundament making it easier for me to make them look like each other and extend both at the same time.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://www.dominik-schacht.com/blog/blog/working-on-the-design.html</guid><pubDate>Wed, 16 Jan 2013 17:00:00 GMT</pubDate></item><item><title>A statically generated blog</title><link>http://www.dominik-schacht.com/blog/blog/a-statically-generated-blog.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;I have decided that it would be super cool and hip to switch from the wordpress blog that I hardly use to a static generated blog. I decided to use &lt;a class="reference external" href="http://http://nikola.ralsina.com.ar/"&gt;Nikola&lt;/a&gt; which seems simple enough to use for a blog and static pages.&lt;/p&gt;
&lt;p&gt;The comfort I see in a static blog is that I can just push it via git to github and use that as hosting. Whenever I want to switch the hoster I just put the static files somewhere else. And it is just plain old fun to write content with vim in restructured text and turn it with magic into a blog :-). It will take some time and posts until the posts are more appealing to the eye&lt;/p&gt;
&lt;p&gt;What I will be writing here will mostly consist of programming topics I work on - other things I do are so much less interesting that I do not even try to write about them.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><guid>http://www.dominik-schacht.com/blog/blog/a-statically-generated-blog.html</guid><pubDate>Fri, 04 Jan 2013 17:00:00 GMT</pubDate></item></channel></rss>